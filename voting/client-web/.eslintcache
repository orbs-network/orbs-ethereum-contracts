[{"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/index.tsx":"1","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/AppWrapper.tsx":"2","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/config.ts":"3","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/Services.ts":"4","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/storesInitialization.ts":"5","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/ApiContext.ts":"6","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/App.tsx":"7","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/OrbsClientFactory.ts":"8","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/MetamaskService.ts":"9","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/RemoteService.ts":"10","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/GuardiansStore.ts":"11","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/OrbsNodeStore.ts":"12","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/translations.ts":"13","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/OrbsNodeService.ts":"14","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/ThemeProvider.tsx":"15","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Main/Main.tsx":"16","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/multi-lang/LangRouter.tsx":"17","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/Header.tsx":"18","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/contracts.ts":"19","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/systemState.ts":"20","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/urls.ts":"21","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/nodeResponseProcessing/processor-public.ts":"22","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/App.theme.ts":"23","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/nodeResponseProcessing/helpers.ts":"24","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/multi-lang/PreLangBasenameContext.ts":"25","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/links.ts":"26","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/languages.tsx":"27","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/MenuPopup.tsx":"28","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/ReadOnlyBanner/readOnlyBannerHooks.tsx":"29","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/RewardsPage.tsx":"30","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/DelegatorsPage/DelegatorsPage.tsx":"31","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/contracts-info.js":"32","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/nodeResponseProcessing/url-generator.ts":"33","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/ServicesHooks.ts":"34","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/v2ServicesHooks.ts":"35","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/multi-lang/ChangeLangLink.tsx":"36","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/storeHooks.ts":"37","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/RewardsHistoryTable.tsx":"38","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/structure/Page.tsx":"39","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/structure/PageSection.tsx":"40","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/GuardiansTable/GuardiansTable.tsx":"41","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/utils/stringUtils.ts":"42","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/tables/TableIcons.tsx":"43","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/base/CommonActionButton.tsx":"44","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/texts/InTextLink.tsx":"45","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/sharedConstants.ts":"46","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/GuardiansTable/GuardianQualifications.tsx":"47","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/cryptoUtils/unitConverter.ts":"48","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/tables/TableIcons.tsx":"49","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/rewardsPageHooks.ts":"50","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/RewardsTable.tsx":"51","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/DelegationInfoTable.tsx":"52","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/VoteChip/VoteChip.tsx":"53"},{"size":572,"mtime":1604926510600,"results":"54","hashOfConfig":"55"},{"size":1306,"mtime":1607436976232,"results":"56","hashOfConfig":"55"},{"size":2483,"mtime":1607437093032,"results":"57","hashOfConfig":"55"},{"size":2512,"mtime":1607437093033,"results":"58","hashOfConfig":"55"},{"size":1026,"mtime":1607436976232,"results":"59","hashOfConfig":"55"},{"size":526,"mtime":1594230900360,"results":"60","hashOfConfig":"55"},{"size":2597,"mtime":1604926510596,"results":"61","hashOfConfig":"55"},{"size":680,"mtime":1593584977211,"results":"62","hashOfConfig":"55"},{"size":3484,"mtime":1593584977210,"results":"63","hashOfConfig":"55"},{"size":1634,"mtime":1577013642764,"results":"64","hashOfConfig":"55"},{"size":2932,"mtime":1604926510593,"results":"65","hashOfConfig":"55"},{"size":4745,"mtime":1607436976353,"results":"66","hashOfConfig":"55"},{"size":20353,"mtime":1607437059332,"results":"67","hashOfConfig":"55"},{"size":3394,"mtime":1607436976239,"results":"68","hashOfConfig":"55"},{"size":905,"mtime":1604926510597,"results":"69","hashOfConfig":"55"},{"size":2219,"mtime":1607436975916,"results":"70","hashOfConfig":"55"},{"size":2026,"mtime":1593584977208,"results":"71","hashOfConfig":"55"},{"size":4643,"mtime":1604926510598,"results":"72","hashOfConfig":"55"},{"size":1530,"mtime":1569145575929,"results":"73","hashOfConfig":"55"},{"size":4405,"mtime":1607437059323,"results":"74","hashOfConfig":"55"},{"size":85,"mtime":1569145575929,"results":"75","hashOfConfig":"55"},{"size":8081,"mtime":1607440060274,"results":"76","hashOfConfig":"55"},{"size":707,"mtime":1604926510595,"results":"77","hashOfConfig":"55"},{"size":1609,"mtime":1607436976240,"results":"78","hashOfConfig":"55"},{"size":599,"mtime":1577013642762,"results":"79","hashOfConfig":"55"},{"size":701,"mtime":1607436975916,"results":"80","hashOfConfig":"55"},{"size":1510,"mtime":1604926510598,"results":"81","hashOfConfig":"55"},{"size":2648,"mtime":1604926510598,"results":"82","hashOfConfig":"55"},{"size":1203,"mtime":1604926510599,"results":"83","hashOfConfig":"55"},{"size":11674,"mtime":1607439491211,"results":"84","hashOfConfig":"55"},{"size":5156,"mtime":1607437093033,"results":"85","hashOfConfig":"55"},{"size":820,"mtime":1569145575927,"results":"86","hashOfConfig":"55"},{"size":1314,"mtime":1607436976240,"results":"87","hashOfConfig":"55"},{"size":1104,"mtime":1607437093033,"results":"88","hashOfConfig":"55"},{"size":1270,"mtime":1607437093033,"results":"89","hashOfConfig":"55"},{"size":1108,"mtime":1577013642761,"results":"90","hashOfConfig":"55"},{"size":504,"mtime":1607436976353,"results":"91","hashOfConfig":"55"},{"size":3392,"mtime":1604926510602,"results":"92","hashOfConfig":"55"},{"size":465,"mtime":1604926510599,"results":"93","hashOfConfig":"55"},{"size":573,"mtime":1604926510599,"results":"94","hashOfConfig":"55"},{"size":14442,"mtime":1607436976575,"results":"95","hashOfConfig":"55"},{"size":167,"mtime":1607436976238,"results":"96","hashOfConfig":"55"},{"size":2533,"mtime":1604926510600,"results":"97","hashOfConfig":"55"},{"size":477,"mtime":1607436976235,"results":"98","hashOfConfig":"55"},{"size":781,"mtime":1607436976238,"results":"99","hashOfConfig":"55"},{"size":75,"mtime":1607436976236,"results":"100","hashOfConfig":"55"},{"size":5419,"mtime":1607437076751,"results":"101","hashOfConfig":"55"},{"size":291,"mtime":1593584977209,"results":"102","hashOfConfig":"55"},{"size":2533,"mtime":1607436976237,"results":"103","hashOfConfig":"55"},{"size":6820,"mtime":1607436975281,"results":"104","hashOfConfig":"55"},{"size":2072,"mtime":1604926510602,"results":"105","hashOfConfig":"55"},{"size":6164,"mtime":1604926510601,"results":"106","hashOfConfig":"55"},{"size":1045,"mtime":1569145575926,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"18baijp",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"110"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/index.tsx",[],["218","219"],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/AppWrapper.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/config.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/Services.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/storesInitialization.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/ApiContext.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/App.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/OrbsClientFactory.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/MetamaskService.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/RemoteService.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/GuardiansStore.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/OrbsNodeStore.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/translations.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/OrbsNodeService.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/ThemeProvider.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Main/Main.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/multi-lang/LangRouter.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/Header.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/contracts.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/systemState.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/urls.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/nodeResponseProcessing/processor-public.ts",["220"],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/App/App.theme.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/nodeResponseProcessing/helpers.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/multi-lang/PreLangBasenameContext.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/links.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/languages.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Header/MenuPopup.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/ReadOnlyBanner/readOnlyBannerHooks.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/RewardsPage.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/DelegatorsPage/DelegatorsPage.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/contracts-info.js",[],["221","222"],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/orbsNodeService/nodeResponseProcessing/url-generator.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/ServicesHooks.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/services/v2/v2ServicesHooks.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/multi-lang/ChangeLangLink.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/Store/storeHooks.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/RewardsHistoryTable.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/structure/Page.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/structure/PageSection.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/GuardiansTable/GuardiansTable.tsx",["223"],"import {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableRow,\n  Button,\n  Typography,\n  Theme,\n  Tooltip,\n} from '@material-ui/core';\nimport useTheme from '@material-ui/core/styles/useTheme';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport React, { useCallback, useMemo } from 'react';\nimport MaterialTable, { Column, MTableToolbar } from 'material-table';\nimport styled from 'styled-components';\nimport { EMPTY_ADDRESS } from '../sharedConstants';\nimport IconButton from '@material-ui/core/IconButton';\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n// import { ReactComponent as GlobeIcon } from '../../../assets/globe.svg';\nimport { ReactComponent as GlobeIcon } from './assets/globe.svg';\nimport SvgIcon from '@material-ui/core/SvgIcon';\nimport { TABLE_ICONS } from '../tables/TableIcons';\nimport { Guardian } from '../../../services/v2/orbsNodeService/systemState';\nimport { GuardianQualifications } from './GuardianQualifications';\nimport { ICommitteeMemberData } from '../../../services/v2/orbsNodeService/OrbsNodeTypes';\nimport { Line } from 'rc-progress';\nimport { CommonActionButton } from '../base/CommonActionButton';\nimport { InTextLink } from '../texts/InTextLink';\nimport { toJS } from 'mobx';\nimport { ensurePrefix } from '../utils/stringUtils';\n\nconst asPercent = (num: number) =>\n  (num * 100).toLocaleString(undefined, { maximumFractionDigits: 2, minimumFractionDigits: 2 }) + '%';\n\n// DEV_NOTE : O.L : The '+' is a trick to get better display of round numbers\nconst secondsToDaysString = (seconds: number) => +(seconds / (60 * 60 * 24)).toFixed(2);\n\nconst getWebsiteAddress = (url: string) => (url.toLowerCase().indexOf('http') === 0 ? url : `http://${url}`);\n\nconst NameBox = styled('div')(() => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyItems: 'center',\n}));\n\nconst useStyles = makeStyles((theme) => ({\n  toolbarWrapper: {\n    '& .MuiToolbar-gutters': {\n      backgroundColor: theme.palette.primary.dark,\n    },\n  },\n\n  selectButton: {\n    minWidth: '130px',\n  },\n}));\n\ntype TGuardianSelectionMode = 'Select' | 'Change' | 'None';\n\ninterface IProps {\n  guardianSelectionMode: TGuardianSelectionMode;\n  guardians: Guardian[];\n  committeeMembers: ICommitteeMemberData[];\n  guardiansToDelegatorsCut: { [guardianAddress: string]: number };\n\n  selectedGuardian?: string;\n  onGuardianSelect?: (guardian: Guardian) => void;\n  tableTestId?: string;\n  extraStyle?: React.CSSProperties;\n  tableTitle?: string;\n\n  disableSelection?: boolean;\n\n  // Styling\n  densePadding?: boolean;\n}\n\nfunction compareGuardiansBySelectedAndThenStake(a: Guardian, b: Guardian, selectedGuardianAddress = '') {\n  const selectedGuardianAddressLowerCase = selectedGuardianAddress.toLowerCase();\n  if (a.EthAddress.toLowerCase() === selectedGuardianAddressLowerCase) {\n    return -1;\n  } else if (b.EthAddress.toLowerCase() === selectedGuardianAddressLowerCase) {\n    return 1;\n  } else {\n    return b.EffectiveStake - a.EffectiveStake;\n  }\n}\n\nexport const GuardiansTable = React.memo<IProps>((props) => {\n  const {\n    guardianSelectionMode,\n    guardians,\n    onGuardianSelect,\n    selectedGuardian,\n    guardiansToDelegatorsCut,\n    disableSelection,\n    tableTestId,\n    extraStyle,\n    tableTitle,\n    densePadding,\n    committeeMembers,\n  } = props;\n  // const guardiansTableTranslations = useGuardiansTableTranslations();\n\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const getGuardianSelectionCellContent = useCallback(\n    (g: Guardian) => {\n      let selectedGuardianCell: JSX.Element | null = null;\n\n      const actionButtonOnClick = () => (onGuardianSelect ? onGuardianSelect(g) : null);\n      const isSelectedGuardian = g.EthAddress.toLowerCase() === selectedGuardian?.toLowerCase();\n\n      switch (guardianSelectionMode) {\n        case 'Select':\n          selectedGuardianCell = (\n            <CommonActionButton\n              disabled={disableSelection}\n              variant={'outlined'}\n              onClick={actionButtonOnClick}\n              fullWidth\n            >\n              {/*{guardiansTableTranslations(isSelectedGuardian ? 'action_keep' : 'action_select')}*/}\n              {isSelectedGuardian ? 'Keep' : 'select'}\n            </CommonActionButton>\n          );\n          break;\n        case 'Change':\n          const enabled = !!onGuardianSelect;\n          const actionButtonIcon = isSelectedGuardian ? (\n            <CheckCircleOutlineIcon data-testid={'selected-guardian-icon'} />\n          ) : (\n            <RadioButtonUncheckedIcon data-testid={'unselected-guardian-icon'} />\n          );\n\n          const iconColor = isSelectedGuardian ? theme.palette.secondary.main : theme.palette.grey['500'];\n\n          selectedGuardianCell = (\n            <Typography data-testid={`guardian-${g.EthAddress}-selected-status`}>\n              <IconButton\n                onClick={actionButtonOnClick}\n                disabled={!enabled || disableSelection}\n                style={{ color: iconColor }}\n              >\n                {actionButtonIcon}\n              </IconButton>\n            </Typography>\n          );\n          break;\n        case 'None':\n          selectedGuardianCell = null;\n          break;\n        default:\n          throw new Error(`Invalid guardian selection mode of ${guardianSelectionMode}`);\n      }\n\n      return selectedGuardianCell;\n    },\n    [\n      selectedGuardian,\n      guardianSelectionMode,\n      onGuardianSelect,\n      disableSelection,\n      theme.palette.secondary.main,\n      theme.palette.grey,\n    ],\n  );\n\n  const hasSelectedGuardian = !!selectedGuardian && selectedGuardian !== EMPTY_ADDRESS;\n  const addSelectionColumn = hasSelectedGuardian || (onGuardianSelect && guardianSelectionMode === 'Select');\n\n  const sortedGuardians = useMemo(\n    () => guardians.slice().sort((a, b) => compareGuardiansBySelectedAndThenStake(a, b, selectedGuardian)),\n    [guardians, selectedGuardian],\n  );\n\n  console.log({ committeeMembers: toJS(committeeMembers) });\n\n  const getCommitteeMemberData = useCallback(\n    (guardianEthAddress: string) => {\n      const committeeMemberData = committeeMembers.find(\n        (committeeMember) =>\n          ensurePrefix(committeeMember.EthAddress, '0x').toLowerCase() === guardianEthAddress.toLowerCase(),\n      );\n\n      return committeeMemberData;\n    },\n    [committeeMembers],\n  );\n\n  // TODO : ORL : TRANSLATIONS\n\n  const columns = useMemo(() => {\n    const columns: Column<Guardian>[] = [\n      {\n        title: '',\n        field: '',\n        render: (guardian) => (\n          <GuardianQualifications\n            guardian={guardian}\n            committeeMembershipData={getCommitteeMemberData(guardian.EthAddress)}\n          />\n        ),\n        width: 'fit-content',\n      },\n      {\n        // title: guardiansTableTranslations('columnHeader_name'),\n        title: 'Name',\n        field: 'Name',\n        render: (guardian) => (\n          <NameBox data-testid={`guardian-${guardian.EthAddress}`}>\n            <Typography>{guardian.Name}</Typography>\n          </NameBox>\n        ),\n        headerStyle: {\n          textAlign: 'left',\n        },\n      },\n      {\n        // title: guardiansTableTranslations('columnHeader_address'),\n        title: 'Address',\n        field: 'EthAddress',\n        render: (guardian) => (\n          <Tooltip title={<Typography>{guardian.EthAddress}</Typography>} arrow placement={'right'} interactive>\n            <Typography style={{ fontFamily: 'monospace', textAlign: 'center' }}>\n              <InTextLink\n                href={`https://etherscan.io/address/${guardian.EthAddress}`}\n                text={`${guardian.EthAddress.substring(0, 10)}...`}\n              />\n            </Typography>\n          </Tooltip>\n        ),\n        // TODO : FUTURE : O.L : Adding \"fontFamily: 'monospace'\" to the cell makes the Typography text larger and better, understand whats going on.\n        cellStyle: {\n          fontFamily: 'monospace',\n        },\n      },\n      {\n        // title: guardiansTableTranslations('columnHeader_website'),\n        title: 'Website',\n        field: 'Website',\n        render: (guardian) => (\n          <Tooltip arrow title={<Typography>{guardian.Website}</Typography>}>\n            <a\n              data-testid={`guardian-${guardian.EthAddress}-website`}\n              href={getWebsiteAddress(guardian.Website)}\n              target='_blank'\n              rel='noopener noreferrer'\n            >\n              <SvgIcon component={GlobeIcon} />\n              {/*<GlobeIcon />*/}\n            </a>\n          </Tooltip>\n        ),\n        cellStyle: {\n          textAlign: 'center',\n        },\n        sorting: false,\n      },\n      {\n        title: 'Reward % To Delegators',\n        field: '',\n        render: (guardian) => {\n          const { EthAddress } = guardian;\n\n          const hasData = guardiansToDelegatorsCut[EthAddress] != undefined;\n\n          const text = hasData ? `${guardiansToDelegatorsCut[EthAddress]}%` : '--';\n\n          return (\n            <Tooltip\n              arrow\n              title={\n                <>\n                  <Typography>This Guardian gives {text} of the rewards to the Delegators</Typography>\n                </>\n              }\n            >\n              <Typography>{text}</Typography>\n            </Tooltip>\n          );\n        },\n        cellStyle: {\n          textAlign: 'center',\n        },\n        customSort: (data1, data2) => {\n          // DEV_NOTE : This is quick, might cause 'un-deterministic' sort, but it's acceptable\n          const delegatorsCut1 = guardiansToDelegatorsCut[data1.EthAddress] || 0;\n          const delegatorsCut2 = guardiansToDelegatorsCut[data2.EthAddress] || 0;\n\n          return delegatorsCut2 - delegatorsCut1;\n        },\n        defaultSort: 'desc',\n      },\n      {\n        title: 'Effective Stake',\n        field: 'EffectiveStake',\n        render: (guardian) => {\n          const { EffectiveStake, SelfStake, DelegatedStake } = guardian;\n\n          const effectiveStakeInUnits =\n            EffectiveStake > 1_000_000\n              ? `${(EffectiveStake / 1_000_000).toFixed(2).replace(/[.,]00$/, '')} M`\n              : `${(EffectiveStake / 1_000).toFixed(2).replace(/[.,]00$/, '')} K`;\n\n          return (\n            <Tooltip\n              arrow\n              title={\n                <>\n                  <Typography>Self stake: {SelfStake?.toLocaleString()} ORBS</Typography>\n                  <Typography>Delegated stake: {DelegatedStake?.toLocaleString()} ORBS</Typography>\n                </>\n              }\n            >\n              <Typography>{effectiveStakeInUnits}</Typography>\n            </Tooltip>\n          );\n        },\n        cellStyle: {\n          textAlign: 'center',\n        },\n        defaultSort: 'desc',\n      },\n      {\n        title: 'Participation',\n        field: 'ParticipationPercentage',\n        render: (guardian) => {\n          const { ParticipationPercentage } = guardian;\n          // TODO : ORL : Make this color gradient\n          const color = ParticipationPercentage <= 30 ? 'red' : ParticipationPercentage <= 80 ? 'yellow' : 'green';\n\n          return (\n            <>\n              <Line percent={ParticipationPercentage} strokeWidth={5} strokeColor={color} />\n              <Typography>{ParticipationPercentage.toFixed(2)}%</Typography>\n            </>\n          );\n        },\n        cellStyle: {\n          textAlign: 'center',\n        },\n        defaultSort: 'desc',\n      },\n      {\n        title: 'Capacity',\n        field: 'SelfStake',\n        render: (guardian) => {\n          const { Capacity, SelfStake, DelegatedStake } = guardian;\n          const selfStakePercentage = +((SelfStake / DelegatedStake) * 100).toFixed(2);\n          // TODO : ORL : Make this color gradient\n          const color = Capacity <= 30 ? 'green' : Capacity <= 80 ? 'yellow' : 'red';\n\n          return (\n            <Tooltip\n              arrow\n              title={\n                <>\n                  <Typography>Self stake: {SelfStake?.toLocaleString()} ORBS</Typography>\n                  <Typography>Delegated stake: {DelegatedStake?.toLocaleString()} ORBS</Typography>\n                  <Typography>% self stake: {selfStakePercentage?.toLocaleString()}%</Typography>\n                </>\n              }\n            >\n              <div>\n                <Line percent={Capacity} strokeWidth={5} strokeColor={color} />\n                <Typography>{Capacity.toFixed(2)}%</Typography>\n              </div>\n            </Tooltip>\n          );\n        },\n        cellStyle: {\n          textAlign: 'center',\n        },\n        defaultSort: 'desc',\n      },\n    ];\n\n    if (addSelectionColumn) {\n      columns.push({\n        // title: guardiansTableTranslations('columnHeader_selection'),\n        title: 'Select',\n        field: '',\n        render: (extendedGuardianInfo) => {\n          return getGuardianSelectionCellContent(extendedGuardianInfo);\n        },\n        cellStyle: {\n          textAlign: 'center',\n        },\n      });\n    }\n\n    return columns;\n  }, [\n    addSelectionColumn,\n    getCommitteeMemberData,\n    getGuardianSelectionCellContent,\n    // guardiansTableTranslations,\n    guardiansToDelegatorsCut,\n  ]);\n\n  // DEV_NOTE : O.L : This prevents displaying of a large empty table if there are less than 50 Guardians.\n  const pageSize = Math.min(50, guardians.length);\n\n  return (\n    <MaterialTable\n      title={tableTitle || ''}\n      columns={columns}\n      data={sortedGuardians}\n      icons={TABLE_ICONS}\n      style={{ overflowX: 'auto' }}\n      options={{\n        padding: densePadding ? 'dense' : 'default',\n        pageSize: pageSize,\n        pageSizeOptions: [5, 10, pageSize],\n\n        rowStyle: (guardian: Guardian) => ({\n          backgroundColor:\n            guardian.EthAddress.toLowerCase() === selectedGuardian?.toLowerCase()\n              ? 'rgba(66,66, 66, 0.55)'\n              : 'rgba(33,33, 33, 0.55)',\n        }),\n        headerStyle: {\n          backgroundColor: theme.palette.primary.dark,\n          textAlign: 'center',\n        },\n      }}\n      components={{\n        // DEV_NOTE : This 'Hack' to style the toolbar is taken from 'https://github.com/mbrn/material-table/issues/1690#issuecomment-603755197'\n        Toolbar: (props) => (\n          <div className={classes.toolbarWrapper}>\n            <MTableToolbar {...props} />\n          </div>\n        ),\n      }}\n    />\n  );\n});\n","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/utils/stringUtils.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/tables/TableIcons.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/base/CommonActionButton.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/texts/InTextLink.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/sharedConstants.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/GuardiansTable/GuardianQualifications.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/cryptoUtils/unitConverter.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/Shared/tables/TableIcons.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/rewardsPageHooks.ts",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/RewardsTable.tsx",[],"/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/pages/RewardsPage/DelegationInfoTable.tsx",["224"],"/**\n * Copyright 2019 the orbs-ethereum-contracts authors\n * This file is part of the orbs-ethereum-contracts library in the Orbs project.\n *\n * This source code is licensed under the MIT license found in the LICENSE file in the root directory of this source tree.\n * The above notice should be included in all copies or substantial portions of the software.\n */\n\nimport React, { useMemo } from 'react';\nimport { VoteChip } from '../../components/VoteChip/VoteChip';\nimport Table from '@material-ui/core/Table';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport Typography from '@material-ui/core/Typography';\nimport { useTranslation } from 'react-i18next';\nimport { TStakingInfo } from './rewardsPageHooks';\nimport { TCurrentDelegationInfo } from '../../services/IRemoteService';\nimport { TableContainer, useMediaQuery } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst formatTimestamp = (timestamp) =>\n  new Date(timestamp).toLocaleString('en-gb', {\n    hour12: false,\n    timeZone: 'UTC',\n    timeZoneName: 'short',\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n  });\n\n// TODO : FUTRUE : O.L : Fix types\ninterface IProps {\n  // Props of delegator\n  delegatorAddress: string;\n  delegatorInfo: TCurrentDelegationInfo;\n  delegatorStakingInfo: TStakingInfo;\n  isAGuardian?: boolean;\n\n  // Props of Delegatee (Guardian)\n  guardianInfo: any;\n}\n\nexport const DelegationInfoTable = React.memo<IProps>((props) => {\n  const { delegatorAddress, delegatorInfo, delegatorStakingInfo, guardianInfo, isAGuardian } = props;\n\n  const { t } = useTranslation();\n\n  // DEV_NOTE : This huge memo could be broken\n  const { delegationType, delegatorBalance, delegatedTo, delegationBlockNumber, delegationTimestamp } = useMemo<{\n    delegationType: string;\n    delegatorBalance: string;\n    delegatedTo: string;\n    delegationBlockNumber: string;\n    delegationTimestamp: string;\n  }>(() => {\n    const delegatorBalance = `${(delegatorInfo.delegatorBalance || 0).toLocaleString()} ORBS`;\n    let delegatedTo: string;\n    let delegationBlockNumber: string;\n    let delegationTimestamp: string;\n\n    let delegationType = delegatorInfo.delegationType;\n\n    if (delegationType === 'Not-Delegated') {\n      // delegatorBalance = '-';\n      delegatedTo = '-';\n      delegationBlockNumber = '-';\n      delegationTimestamp = '-';\n    } else {\n      // delegatorBalance = `${(delegatorInfo.delegatorBalance || 0).toLocaleString()} ORBS`;\n      delegatedTo = delegatorInfo.delegatedTo;\n      delegationBlockNumber = (delegatorInfo.delegationBlockNumber || 0).toLocaleString();\n      delegationTimestamp =\n        delegatorInfo['delegationTimestamp'] != 0 ? formatTimestamp(delegatorInfo['delegationTimestamp']) : '--';\n    }\n\n    // DEV_NOTE : Guardians always 'delegate' to themself\n    if (isAGuardian) {\n      delegatedTo = delegatorAddress;\n      delegationBlockNumber = '-';\n      delegationTimestamp = '-';\n      delegationType = 'Self (Guardian)';\n    }\n\n    return {\n      delegationType,\n      delegatorBalance,\n      delegatedTo,\n      delegationBlockNumber,\n      delegationTimestamp,\n    };\n  }, [delegatorAddress, delegatorInfo, isAGuardian]);\n\n  // DEV_NOTE : This is a hack to mamk the \"table\" looks better with all of\n  //            the content visible in mobile (without the need to scroll for) because of the\n  //            long address.\n  const theme = useTheme();\n  const smallerThanSmall = useMediaQuery(theme.breakpoints.down('xs'));\n  const contentCellAlignment = smallerThanSmall ? 'left' : 'right';\n\n  return (\n    <TableContainer>\n      <Table>\n        <TableBody>\n          <TableRow>\n            <TableCell>{t('Delegated To')}</TableCell>\n            <TableCell align='right'>\n              <Typography\n                noWrap\n                style={{\n                  textOverflow: 'ellipsis',\n                  whiteSpace: 'nowrap',\n                  overflow: 'hidden',\n                }}\n              >\n                {delegatedTo}\n              </Typography>\n            </TableCell>\n            {/*<TableCell align='right'></TableCell>*/}\n          </TableRow>\n          <TableRow>\n            <TableCell>{t(`delegatorNonStakedOrbs`)}</TableCell>\n            <TableCell align={contentCellAlignment}>{delegatorBalance}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{t(`delegatorStakedOrbs`)}</TableCell>\n            <TableCell align={contentCellAlignment}>{delegatorStakingInfo.stakedOrbs?.toLocaleString()}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{t('Guardian voted in previous elections')}</TableCell>\n            <TableCell align={contentCellAlignment}>\n              {guardianInfo.voted === true || guardianInfo.voted === false ? (\n                <VoteChip value={guardianInfo.voted} />\n              ) : (\n                '-'\n              )}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{t('Guardian voted for next elections')}</TableCell>\n            <TableCell align={contentCellAlignment}>\n              {guardianInfo.hasEligibleVote === true || guardianInfo.hasEligibleVote === false ? (\n                <VoteChip value={guardianInfo.hasEligibleVote} />\n              ) : (\n                '-'\n              )}\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{t('Delegation method')}</TableCell>\n            <TableCell align={contentCellAlignment}>{delegationType}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{t('Delegation block number')}</TableCell>\n            <TableCell align={contentCellAlignment}>{delegationBlockNumber}</TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell>{t('Delegation timestamp')}</TableCell>\n            <TableCell align={contentCellAlignment}>{delegationTimestamp}</TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n});\n","/Users/orlavy/Programming/projects/orbs-ethereum-contracts/voting/client-web/src/components/VoteChip/VoteChip.tsx",[],{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":91,"column":71,"nodeType":"231","messageId":"232","endLine":91,"endColumn":73},{"ruleId":"225","replacedBy":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","severity":1,"message":"230","line":269,"column":64,"nodeType":"231","messageId":"232","endLine":269,"endColumn":66},{"ruleId":"229","severity":1,"message":"230","line":77,"column":46,"nodeType":"231","messageId":"232","endLine":77,"endColumn":48},"no-native-reassign",["233"],"no-negated-in-lhs",["234"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]